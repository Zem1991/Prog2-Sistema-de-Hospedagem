package atividadeTuristica;

import java.io.BufferedReader;
import java.io.FileInputStream;
import java.io.FileWriter;
import java.io.IOException;
import java.io.InputStreamReader;
import java.io.PrintWriter;
import javax.swing.JOptionPane;
import projetoprog2.DataHorario;

/**
 *
 * @author Alfredo, Felipe
 */
public class JFrameAtividadeTur extends javax.swing.JFrame {
    private byte dificuldade;
    /** Creates new form JFrameAtividadeTur */
    public JFrameAtividadeTur() {
        initComponents();
    }

    /** This method is called from within the constructor to
     * initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is
     * always regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        ButtonGDificuldadeAventura = new javax.swing.ButtonGroup();
        AbasAtividadeTuristica = new javax.swing.JTabbedPane();
        AbaAventura = new javax.swing.JPanel();
        jLabelRestricoesAventura = new javax.swing.JLabel();
        jScrollPaneRestricoesAventura = new javax.swing.JScrollPane();
        jTextAreaRestricoesAventura = new javax.swing.JTextArea();
        jLabelDificuldadeAventura = new javax.swing.JLabel();
        jRBFacilAventura = new javax.swing.JRadioButton();
        jRBMedioAventura = new javax.swing.JRadioButton();
        jRBNormalAventura = new javax.swing.JRadioButton();
        jRBDificilAventura = new javax.swing.JRadioButton();
        jRBImpoAventura = new javax.swing.JRadioButton();
        AbaCultural = new javax.swing.JPanel();
        jLabelDuracaoAventura1 = new javax.swing.JLabel();
        AbaPasseio = new javax.swing.JPanel();
        jLabelRestricoesPasseio = new javax.swing.JLabel();
        jScrollPaneRestricoesPasseio = new javax.swing.JScrollPane();
        jTextRestricoesPasseio = new javax.swing.JTextArea();
        AbaAlimentacao = new javax.swing.JPanel();
        jLabelClassifAlimentacao = new javax.swing.JLabel();
        jTextClassifAlimentacao = new javax.swing.JTextField();
        jLabelCardapioAlimentacao = new javax.swing.JLabel();
        jScrollPaneCardapioAlimentacao = new javax.swing.JScrollPane();
        jTextCardapioAlimentacao = new javax.swing.JTextArea();
        jLabelNome = new javax.swing.JLabel();
        jTextNome = new javax.swing.JTextField();
        jLabelNumero = new javax.swing.JLabel();
        jTextNumero = new javax.swing.JTextField();
        jLabelDescricao = new javax.swing.JLabel();
        jTextDescricao = new javax.swing.JTextField();
        jLabelData = new javax.swing.JLabel();
        jTextDia = new javax.swing.JTextField();
        jTextMes = new javax.swing.JTextField();
        jTextAno = new javax.swing.JTextField();
        jLabelDuracao = new javax.swing.JLabel();
        jTextPreco = new javax.swing.JTextField();
        jLabelPreco = new javax.swing.JLabel();
        jTextDuracao = new javax.swing.JTextField();
        jLabelLocal = new javax.swing.JLabel();
        jTextLocal = new javax.swing.JTextField();
        jLabelVagas = new javax.swing.JLabel();
        jTextVagas = new javax.swing.JTextField();
        jBIncluir = new javax.swing.JButton();
        jBLimpar = new javax.swing.JButton();
        jBCancelar = new javax.swing.JButton();
        jLabelHorario = new javax.swing.JLabel();
        jTextHora = new javax.swing.JTextField();
        jTextMinuto = new javax.swing.JTextField();

        setDefaultCloseOperation(javax.swing.WindowConstants.DISPOSE_ON_CLOSE);
        setTitle("Nova Atividade Turística");
        setResizable(false);

        jLabelRestricoesAventura.setText("Restrições (300 char): ");

        jTextAreaRestricoesAventura.setColumns(20);
        jTextAreaRestricoesAventura.setRows(5);
        jScrollPaneRestricoesAventura.setViewportView(jTextAreaRestricoesAventura);

        jLabelDificuldadeAventura.setText("Dificuldade:");

        ButtonGDificuldadeAventura.add(jRBFacilAventura);
        jRBFacilAventura.setSelected(true);
        jRBFacilAventura.setText("Easy");
        jRBFacilAventura.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jRBFacilAventuraActionPerformed(evt);
            }
        });

        ButtonGDificuldadeAventura.add(jRBMedioAventura);
        jRBMedioAventura.setText("Medium");
        jRBMedioAventura.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jRBMedioAventuraActionPerformed(evt);
            }
        });

        ButtonGDificuldadeAventura.add(jRBNormalAventura);
        jRBNormalAventura.setText("Normal");
        jRBNormalAventura.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jRBNormalAventuraActionPerformed(evt);
            }
        });

        ButtonGDificuldadeAventura.add(jRBDificilAventura);
        jRBDificilAventura.setText("Hard");
        jRBDificilAventura.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jRBDificilAventuraActionPerformed(evt);
            }
        });

        ButtonGDificuldadeAventura.add(jRBImpoAventura);
        jRBImpoAventura.setText("Big Boss");
        jRBImpoAventura.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jRBImpoAventuraActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout AbaAventuraLayout = new javax.swing.GroupLayout(AbaAventura);
        AbaAventura.setLayout(AbaAventuraLayout);
        AbaAventuraLayout.setHorizontalGroup(
            AbaAventuraLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(AbaAventuraLayout.createSequentialGroup()
                .addContainerGap()
                .addGroup(AbaAventuraLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jRBDificilAventura)
                    .addComponent(jRBFacilAventura)
                    .addComponent(jRBNormalAventura)
                    .addComponent(jRBMedioAventura)
                    .addComponent(jRBImpoAventura)
                    .addComponent(jLabelDificuldadeAventura))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 28, Short.MAX_VALUE)
                .addGroup(AbaAventuraLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jLabelRestricoesAventura)
                    .addComponent(jScrollPaneRestricoesAventura, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addContainerGap())
        );
        AbaAventuraLayout.setVerticalGroup(
            AbaAventuraLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(AbaAventuraLayout.createSequentialGroup()
                .addContainerGap()
                .addGroup(AbaAventuraLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabelDificuldadeAventura)
                    .addComponent(jLabelRestricoesAventura))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(AbaAventuraLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(AbaAventuraLayout.createSequentialGroup()
                        .addComponent(jRBFacilAventura)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addGroup(AbaAventuraLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(jRBMedioAventura)
                            .addGroup(AbaAventuraLayout.createSequentialGroup()
                                .addGap(25, 25, 25)
                                .addComponent(jRBNormalAventura)))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(jRBDificilAventura)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(jRBImpoAventura))
                    .addComponent(jScrollPaneRestricoesAventura, javax.swing.GroupLayout.DEFAULT_SIZE, 134, Short.MAX_VALUE))
                .addContainerGap())
        );

        AbasAtividadeTuristica.addTab("Aventura", AbaAventura);

        jLabelDuracaoAventura1.setHorizontalAlignment(javax.swing.SwingConstants.LEFT);
        jLabelDuracaoAventura1.setText("Não necessita de atributos específicos.");

        javax.swing.GroupLayout AbaCulturalLayout = new javax.swing.GroupLayout(AbaCultural);
        AbaCultural.setLayout(AbaCulturalLayout);
        AbaCulturalLayout.setHorizontalGroup(
            AbaCulturalLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(AbaCulturalLayout.createSequentialGroup()
                .addGap(46, 46, 46)
                .addComponent(jLabelDuracaoAventura1)
                .addContainerGap(46, Short.MAX_VALUE))
        );
        AbaCulturalLayout.setVerticalGroup(
            AbaCulturalLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(AbaCulturalLayout.createSequentialGroup()
                .addGap(81, 81, 81)
                .addComponent(jLabelDuracaoAventura1)
                .addContainerGap(81, Short.MAX_VALUE))
        );

        AbasAtividadeTuristica.addTab("Cultural", AbaCultural);

        jLabelRestricoesPasseio.setText("Restrições (300 char):");

        jTextRestricoesPasseio.setColumns(20);
        jTextRestricoesPasseio.setRows(5);
        jScrollPaneRestricoesPasseio.setViewportView(jTextRestricoesPasseio);

        javax.swing.GroupLayout AbaPasseioLayout = new javax.swing.GroupLayout(AbaPasseio);
        AbaPasseio.setLayout(AbaPasseioLayout);
        AbaPasseioLayout.setHorizontalGroup(
            AbaPasseioLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(AbaPasseioLayout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jLabelRestricoesPasseio)
                .addContainerGap(162, Short.MAX_VALUE))
            .addGroup(AbaPasseioLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                .addGroup(AbaPasseioLayout.createSequentialGroup()
                    .addContainerGap()
                    .addComponent(jScrollPaneRestricoesPasseio, javax.swing.GroupLayout.DEFAULT_SIZE, 259, Short.MAX_VALUE)
                    .addContainerGap()))
        );
        AbaPasseioLayout.setVerticalGroup(
            AbaPasseioLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(AbaPasseioLayout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jLabelRestricoesPasseio)
                .addContainerGap(151, Short.MAX_VALUE))
            .addGroup(AbaPasseioLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                .addGroup(AbaPasseioLayout.createSequentialGroup()
                    .addGap(31, 31, 31)
                    .addComponent(jScrollPaneRestricoesPasseio, javax.swing.GroupLayout.DEFAULT_SIZE, 134, Short.MAX_VALUE)
                    .addContainerGap()))
        );

        AbasAtividadeTuristica.addTab("Passeio", AbaPasseio);

        jLabelClassifAlimentacao.setText("Clasificação (de 1 a 5 estrelas): ");

        jTextClassifAlimentacao.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jTextClassifAlimentacaoActionPerformed(evt);
            }
        });

        jLabelCardapioAlimentacao.setText("Cardapio (300 char): ");

        jTextCardapioAlimentacao.setColumns(20);
        jTextCardapioAlimentacao.setRows(5);
        jScrollPaneCardapioAlimentacao.setViewportView(jTextCardapioAlimentacao);

        javax.swing.GroupLayout AbaAlimentacaoLayout = new javax.swing.GroupLayout(AbaAlimentacao);
        AbaAlimentacao.setLayout(AbaAlimentacaoLayout);
        AbaAlimentacaoLayout.setHorizontalGroup(
            AbaAlimentacaoLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(AbaAlimentacaoLayout.createSequentialGroup()
                .addContainerGap()
                .addGroup(AbaAlimentacaoLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jScrollPaneCardapioAlimentacao, javax.swing.GroupLayout.DEFAULT_SIZE, 259, Short.MAX_VALUE)
                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, AbaAlimentacaoLayout.createSequentialGroup()
                        .addComponent(jLabelClassifAlimentacao, javax.swing.GroupLayout.DEFAULT_SIZE, 189, Short.MAX_VALUE)
                        .addGap(10, 10, 10)
                        .addComponent(jTextClassifAlimentacao, javax.swing.GroupLayout.PREFERRED_SIZE, 60, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addComponent(jLabelCardapioAlimentacao))
                .addContainerGap())
        );
        AbaAlimentacaoLayout.setVerticalGroup(
            AbaAlimentacaoLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(AbaAlimentacaoLayout.createSequentialGroup()
                .addContainerGap()
                .addGroup(AbaAlimentacaoLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabelClassifAlimentacao)
                    .addComponent(jTextClassifAlimentacao, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jLabelCardapioAlimentacao)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jScrollPaneCardapioAlimentacao, javax.swing.GroupLayout.DEFAULT_SIZE, 108, Short.MAX_VALUE)
                .addContainerGap())
        );

        AbasAtividadeTuristica.addTab("Alimentação", AbaAlimentacao);

        jLabelNome.setText("Nome: ");

        jTextNome.setText("Atividade Teste");

        jLabelNumero.setText("Numero:");

        jTextNumero.setText("001");
        jTextNumero.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jTextNumeroActionPerformed(evt);
            }
        });

        jLabelDescricao.setText("Descrição (500 char):");

        jTextDescricao.setText("Descrição.");

        jLabelData.setText("Data (DD/MM/AAAA):");

        jTextDia.setText("01");
        jTextDia.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jTextDiaActionPerformed(evt);
            }
        });

        jTextMes.setText("02");

        jTextAno.setText("2012");

        jLabelDuracao.setText("Duração (Horas): ");

        jTextPreco.setText("45");

        jLabelPreco.setText("Preço:");

        jTextDuracao.setText("6");

        jLabelLocal.setText("Local (100 char):");

        jTextLocal.setText("Local");
        jTextLocal.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jTextLocalActionPerformed(evt);
            }
        });

        jLabelVagas.setText("Vagas:");

        jTextVagas.setText("10");
        jTextVagas.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jTextVagasActionPerformed(evt);
            }
        });

        jBIncluir.setText("Incluir");
        jBIncluir.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jBIncluirActionPerformed(evt);
            }
        });

        jBLimpar.setText("Limpar");
        jBLimpar.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jBLimparActionPerformed(evt);
            }
        });

        jBCancelar.setText("Cancelar");
        jBCancelar.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jBCancelarActionPerformed(evt);
            }
        });

        jLabelHorario.setText("Horário (HH:MM):");

        jTextHora.setText("12");
        jTextHora.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jTextHoraActionPerformed(evt);
            }
        });

        jTextMinuto.setText("30");
        jTextMinuto.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jTextMinutoActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                    .addGroup(layout.createSequentialGroup()
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(jLabelDescricao)
                            .addComponent(jLabelNome)
                            .addComponent(jLabelData)
                            .addComponent(jLabelHorario)
                            .addComponent(jLabelPreco)
                            .addComponent(jLabelLocal))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                            .addComponent(jTextLocal, javax.swing.GroupLayout.Alignment.LEADING, javax.swing.GroupLayout.DEFAULT_SIZE, 177, Short.MAX_VALUE)
                            .addGroup(javax.swing.GroupLayout.Alignment.LEADING, layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                                .addComponent(jTextDescricao)
                                .addComponent(jTextNome, javax.swing.GroupLayout.DEFAULT_SIZE, 177, Short.MAX_VALUE))
                            .addGroup(javax.swing.GroupLayout.Alignment.LEADING, layout.createSequentialGroup()
                                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                                    .addComponent(jTextPreco, javax.swing.GroupLayout.Alignment.LEADING, javax.swing.GroupLayout.DEFAULT_SIZE, 55, Short.MAX_VALUE)
                                    .addComponent(jTextHora, javax.swing.GroupLayout.Alignment.LEADING, javax.swing.GroupLayout.DEFAULT_SIZE, 55, Short.MAX_VALUE)
                                    .addComponent(jTextDia, javax.swing.GroupLayout.DEFAULT_SIZE, 54, Short.MAX_VALUE))
                                .addGap(7, 7, 7)
                                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                    .addComponent(jTextMinuto, javax.swing.GroupLayout.DEFAULT_SIZE, 55, Short.MAX_VALUE)
                                    .addComponent(jTextMes, javax.swing.GroupLayout.DEFAULT_SIZE, 54, Short.MAX_VALUE))
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                .addComponent(jTextAno, javax.swing.GroupLayout.PREFERRED_SIZE, 54, javax.swing.GroupLayout.PREFERRED_SIZE))))
                    .addGroup(layout.createSequentialGroup()
                        .addComponent(jBIncluir)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(jBLimpar)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(jBCancelar)))
                .addGap(18, 18, 18)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jLabelNumero)
                    .addComponent(jLabelDuracao)
                    .addComponent(jLabelVagas))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jTextVagas, javax.swing.GroupLayout.DEFAULT_SIZE, 54, Short.MAX_VALUE)
                    .addComponent(jTextNumero, javax.swing.GroupLayout.DEFAULT_SIZE, 54, Short.MAX_VALUE)
                    .addComponent(jTextDuracao, javax.swing.GroupLayout.DEFAULT_SIZE, 54, Short.MAX_VALUE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(AbasAtividadeTuristica, javax.swing.GroupLayout.PREFERRED_SIZE, 284, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap())
        );

        layout.linkSize(javax.swing.SwingConstants.HORIZONTAL, new java.awt.Component[] {jTextAno, jTextDia, jTextMes});

        layout.linkSize(javax.swing.SwingConstants.HORIZONTAL, new java.awt.Component[] {jBCancelar, jBIncluir, jBLimpar});

        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(AbasAtividadeTuristica, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addGroup(layout.createSequentialGroup()
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(jLabelNome)
                            .addComponent(jTextNome, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(jLabelNumero)
                            .addComponent(jTextNumero, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(jLabelDescricao, javax.swing.GroupLayout.PREFERRED_SIZE, 33, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(jTextDescricao, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(jLabelDuracao)
                            .addComponent(jTextDuracao, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(jLabelData)
                            .addComponent(jTextDia, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(jTextMes, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(jTextAno, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(jLabelVagas)
                            .addComponent(jTextVagas, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(jLabelHorario)
                            .addComponent(jTextHora, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(jTextMinuto, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(jTextPreco, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(jLabelPreco))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(jLabelLocal)
                            .addComponent(jTextLocal, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(jBLimpar)
                            .addComponent(jBIncluir)
                            .addComponent(jBCancelar))))
                .addContainerGap())
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    /**
     * Limpa o conteúdo de todos os campos.
     */
    private void jBLimparActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jBLimparActionPerformed
        jTextNome.setText(null);
        jTextNumero.setText(null);
        jTextDescricao.setText(null);
        jTextDia.setText(null);
        jTextMes.setText(null);
        jTextAno.setText(null);
        jTextDuracao.setText(null);
        jTextPreco.setText(null);
        jTextLocal.setText(null);
        jTextVagas.setText(null);

        if (AbasAtividadeTuristica.getSelectedComponent() == AbaAventura){
            jTextAreaRestricoesAventura.setText(null);
            ButtonGDificuldadeAventura.setSelected(null, true);
        }
        else if(AbasAtividadeTuristica.getSelectedComponent() == AbaCultural)
        {
            //Não há componentes extras para a aba Cultural.
        }
        else if (AbasAtividadeTuristica.getSelectedComponent() == AbaPasseio){
            jTextRestricoesPasseio.setText(null);
        }
        else if (AbasAtividadeTuristica.getSelectedComponent() == AbaAlimentacao){
            jTextClassifAlimentacao.setText(null);
            jTextCardapioAlimentacao.setText(null);
        }
    }//GEN-LAST:event_jBLimparActionPerformed

    /**
     * Cria o novo arquivo para incluir posteriormente nos roteiros.
     */
    private void jBIncluirActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jBIncluirActionPerformed
        //CASO SEJA AVENTURA.
        if (AbasAtividadeTuristica.getSelectedComponent() == AbaAventura){
            
            Aventura novo = new Aventura
                (jTextNome.getText(),
                Integer.parseInt(jTextNumero.getText()), dificuldade);
            novo.setDescricao(jTextDescricao.getText());
            novo.setDataHorario(
                    new DataHorario((byte) Integer.parseInt(jTextAno.getText()),
                    (byte) Integer.parseInt(jTextMes.getText()),
                    (byte) Integer.parseInt(jTextDia.getText()),
                    (byte) Integer.parseInt(jTextHora.getText()),
                    (byte) Integer.parseInt(jTextMinuto.getText()))
                    );
            novo.setDuracaoHora((byte) Integer.parseInt(jTextDuracao.getText()));
            novo.setPreco(Double.parseDouble(jTextPreco.getText()));
            novo.setLocal(jTextLocal.getText());
            novo.setVagas(Integer.parseInt(jTextVagas.getText()));

            novo.setRestricoes(jTextAreaRestricoesAventura.getText());

            //Fluxo
            System.out.println("--------------------");
            System.out.println("Fluxo de arquivo iniciado");
            try
            {
                //Escrtitora por linha
                FileWriter out = new FileWriter("AtividadeAventura.txt", true);
                PrintWriter escreve = new PrintWriter(out);
                System.out.println("Escritora de arquivo criada.");

                //Leitora do arquivo para cadastro de novas aventuras
                FileInputStream stream = new FileInputStream("AtividadeAventura.txt");
                InputStreamReader streamReader = new InputStreamReader(stream);
                BufferedReader in = new BufferedReader(streamReader);
                System.out.println("Leitor de arquvo criado.");
                
                String s = null;
                
                //Escreve depois das linhas ja escritas
                do{
                    s = in.readLine();
                    if(s==null)
                    {
                          escreve.println(novo.getNome());
                          escreve.println(novo.getNumero());
                          escreve.println(novo.getSubTipo());
                          escreve.println(novo.getDescricao());
                          escreve.println(novo.getDataHorario().getAno());
                          escreve.println(novo.getDataHorario().getMes());
                          escreve.println(novo.getDataHorario().getDia());
                          escreve.println(novo.getDataHorario().getHora());
                          escreve.println(novo.getDataHorario().getMin());
                          escreve.println(novo.getDuracaoHora());
                          escreve.println(novo.getPreco());
                          escreve.println(novo.getLocal());
                          escreve.println(novo.getVagas());

                          escreve.println(novo.getDificuldade());
                          escreve.println(novo.getRestricoes());

                          //Separador
                          escreve.println("//");
                          System.out.println("Entrada de dados completa.");
                    }
                }while(s != null);
                escreve.flush();
                escreve.close();
                out.close();
                streamReader.close();
                in.close();
                stream.close();

            } catch(IOException e)
            {
                 JOptionPane.showMessageDialog(null,
                        "Erro! Arquivo não pode ser criado.");
            }
            System.out.println("Fluxo de arquivo terminado.");
            System.out.println("--------------------");
        }

        //CASO SEJA CULTURAL.
        else if(AbasAtividadeTuristica.getSelectedComponent() == AbaCultural)
        {
            //Não possui atributos específicos.
            Cultural novo = new Cultural
                (jTextNome.getText(),
                Integer.parseInt(jTextNumero.getText()));
            novo.setDescricao(jTextDescricao.getText());
            novo.setDataHorario(
                    new DataHorario((byte) Integer.parseInt(jTextAno.getText()),
                    (byte) Integer.parseInt(jTextMes.getText()),
                    (byte) Integer.parseInt(jTextDia.getText()),
                    (byte) Integer.parseInt(jTextHora.getText()),
                    (byte) Integer.parseInt(jTextMinuto.getText()))
                    );
            novo.setDuracaoHora((byte) Integer.parseInt(jTextDuracao.getText()));
            novo.setPreco(Double.parseDouble(jTextPreco.getText()));
            novo.setLocal(jTextLocal.getText());
            novo.setVagas(Integer.parseInt(jTextVagas.getText()));

            //Fluxo
            System.out.println("--------------------");
            System.out.println("Fluxo de arquivo iniciado");
            try
            {
                //Escrtitora por linha
                FileWriter out = new FileWriter("AtividadeCultural.txt", true);
                PrintWriter escreve = new PrintWriter(out);
                System.out.println("Escritora de arquivo criada.");

                //Leitora do arquivo para cadastro de novas aventuras
                FileInputStream stream = new FileInputStream("AtividadeCultural.txt");
                InputStreamReader streamReader = new InputStreamReader(stream);
                BufferedReader in = new BufferedReader(streamReader);
                System.out.println("Leitor de arquvo criado.");

                String s = null;

                //Escreve depois das linhas ja escritas
                do{
                    s = in.readLine();
                    if(s==null)
                    {
                          escreve.println(novo.getNome());
                          escreve.println(novo.getNumero());
                          escreve.println(novo.getSubTipo());
                          escreve.println(novo.getDescricao());
                          escreve.println(novo.getDataHorario().getAno());
                          escreve.println(novo.getDataHorario().getMes());
                          escreve.println(novo.getDataHorario().getDia());
                          escreve.println(novo.getDataHorario().getHora());
                          escreve.println(novo.getDataHorario().getMin());
                          escreve.println(novo.getDuracaoHora());
                          escreve.println(novo.getPreco());
                          escreve.println(novo.getLocal());
                          escreve.println(novo.getVagas());

                          //Separador
                          escreve.println("//");
                          System.out.println("Entrada de dados completa.");
                    }
                }while(s != null);
                escreve.flush();
                escreve.close();
                out.close();
                streamReader.close();
                in.close();
                stream.close();

            } catch(IOException e)
            {
                 JOptionPane.showMessageDialog(null,
                        "Erro! Arquivo não pode ser criado.");
            }
            System.out.println("Fluxo de arquivo terminado.");
            System.out.println("--------------------");
        }

        //CASO SEJA PASSEIO.
        if (AbasAtividadeTuristica.getSelectedComponent() == AbaPasseio){
            Passeio novo = new Passeio
                (jTextNome.getText(),
                Integer.parseInt(jTextNumero.getText()));
            novo.setDescricao(jTextDescricao.getText());
            novo.setDataHorario(
                    new DataHorario((byte) Integer.parseInt(jTextAno.getText()),
                    (byte) Integer.parseInt(jTextMes.getText()),
                    (byte) Integer.parseInt(jTextDia.getText()),
                    (byte) Integer.parseInt(jTextHora.getText()),
                    (byte) Integer.parseInt(jTextMinuto.getText()))
                    );
            novo.setDuracaoHora((byte) Integer.parseInt(jTextDuracao.getText()));
            novo.setPreco(Double.parseDouble(jTextPreco.getText()));
            novo.setLocal(jTextLocal.getText());
            novo.setVagas(Integer.parseInt(jTextVagas.getText()));

            novo.setRestricoes(jTextRestricoesPasseio.getText());

            //Fluxo
            System.out.println("--------------------");
            System.out.println("Fluxo de arquivo iniciado");
            try
            {
                //Escrtitora por linha
                FileWriter out = new FileWriter("AtividadePasseio.txt", true);
                PrintWriter escreve = new PrintWriter(out);
                System.out.println("Escritora de arquivo criada.");

                //Leitora do arquivo para cadastro de novas aventuras
                FileInputStream stream = new FileInputStream("AtividadePasseio.txt");
                InputStreamReader streamReader = new InputStreamReader(stream);
                BufferedReader in = new BufferedReader(streamReader);
                System.out.println("Leitor de arquvo criado.");

                String s = null;

                //Escreve depois das linhas ja escritas
                do{
                    s = in.readLine();
                    if(s==null)
                    {
                          escreve.println(novo.getNome());
                          escreve.println(novo.getNumero());
                          escreve.println(novo.getSubTipo());
                          escreve.println(novo.getDescricao());
                          escreve.println(novo.getDataHorario().getAno());
                          escreve.println(novo.getDataHorario().getMes());
                          escreve.println(novo.getDataHorario().getDia());
                          escreve.println(novo.getDataHorario().getHora());
                          escreve.println(novo.getDataHorario().getMin());
                          escreve.println(novo.getDuracaoHora());
                          escreve.println(novo.getPreco());
                          escreve.println(novo.getLocal());
                          escreve.println(novo.getVagas());

                          escreve.println(novo.getRestricoes());

                          //Separador
                          escreve.println("//");
                          System.out.println("Entrada de dados completa.");
                    }
                }while(s != null);
                escreve.flush();
                escreve.close();
                out.close();
                streamReader.close();
                in.close();
                stream.close();

            } catch(IOException e)
            {
                 JOptionPane.showMessageDialog(null,
                        "Erro! Arquivo não pode ser criado.");
            }
            System.out.println("Fluxo de arquivo terminado.");
            System.out.println("--------------------");
        }

        //CASO SEJA ALIMENTACAO.
        if (AbasAtividadeTuristica.getSelectedComponent() == AbaAlimentacao){
            Alimentacao novo = new Alimentacao
                (jTextNome.getText(),
                Integer.parseInt(jTextNumero.getText()),
                (byte) Integer.parseInt(jTextClassifAlimentacao.getText()));
            novo.setDescricao(jTextDescricao.getText());
            novo.setDataHorario(
                    new DataHorario((byte) Integer.parseInt(jTextAno.getText()),
                    (byte) Integer.parseInt(jTextMes.getText()),
                    (byte) Integer.parseInt(jTextDia.getText()),
                    (byte) Integer.parseInt(jTextHora.getText()),
                    (byte) Integer.parseInt(jTextMinuto.getText()))
                    );
            novo.setDuracaoHora((byte) Integer.parseInt(jTextDuracao.getText()));
            novo.setPreco(Double.parseDouble(jTextPreco.getText()));
            novo.setLocal(jTextLocal.getText());
            novo.setVagas(Integer.parseInt(jTextVagas.getText()));

            novo.setCardapio(jTextCardapioAlimentacao.getText());

            //Fluxo
            System.out.println("--------------------");
            System.out.println("Fluxo de arquivo iniciado");
            try
            {
                //Escrtitora por linha
                FileWriter out = new FileWriter("AtividadeAlimentacao.txt", true);
                PrintWriter escreve = new PrintWriter(out);
                System.out.println("Escritora de arquivo criada.");

                //Leitora do arquivo para cadastro de novas aventuras
                FileInputStream stream = new FileInputStream("AtividadeAlimentacao.txt");
                InputStreamReader streamReader = new InputStreamReader(stream);
                BufferedReader in = new BufferedReader(streamReader);
                System.out.println("Leitor de arquvo criado.");

                String s = null;

                //Escreve depois das linhas ja escritas
                do{
                    s = in.readLine();
                    if(s==null)
                    {
                          escreve.println(novo.getNome());
                          escreve.println(novo.getNumero());
                          escreve.println(novo.getSubTipo());
                          escreve.println(novo.getDescricao());
                          escreve.println(novo.getDataHorario().getAno());
                          escreve.println(novo.getDataHorario().getMes());
                          escreve.println(novo.getDataHorario().getDia());
                          escreve.println(novo.getDataHorario().getHora());
                          escreve.println(novo.getDataHorario().getMin());
                          escreve.println(novo.getDuracaoHora());
                          escreve.println(novo.getPreco());
                          escreve.println(novo.getLocal());
                          escreve.println(novo.getVagas());

                          escreve.println(novo.getCardapio());
                          escreve.println(novo.getClassificacao());

                          //Separador
                          escreve.println("//");
                          System.out.println("Entrada de dados completa.");
                    }
                }while(s != null);
                escreve.flush();
                escreve.close();
                out.close();
                streamReader.close();
                in.close();
                stream.close();

            } catch(IOException e)
            {
                 JOptionPane.showMessageDialog(null,
                        "Erro! Arquivo não pode ser criado.");
            }
            System.out.println("Fluxo de arquivo terminado.");
            System.out.println("--------------------");
        }
}//GEN-LAST:event_jBIncluirActionPerformed

    private void jRBImpoAventuraActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jRBImpoAventuraActionPerformed
        dificuldade = 5;
}//GEN-LAST:event_jRBImpoAventuraActionPerformed

    private void jRBDificilAventuraActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jRBDificilAventuraActionPerformed
        dificuldade = 4;
}//GEN-LAST:event_jRBDificilAventuraActionPerformed

    private void jRBNormalAventuraActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jRBNormalAventuraActionPerformed
        dificuldade = 3;
}//GEN-LAST:event_jRBNormalAventuraActionPerformed

    private void jRBMedioAventuraActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jRBMedioAventuraActionPerformed
        dificuldade = 2;
}//GEN-LAST:event_jRBMedioAventuraActionPerformed

    private void jRBFacilAventuraActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jRBFacilAventuraActionPerformed
        dificuldade = 1;
}//GEN-LAST:event_jRBFacilAventuraActionPerformed

    private void jTextDiaActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jTextDiaActionPerformed
        // TODO add your handling code here:
}//GEN-LAST:event_jTextDiaActionPerformed

    private void jTextLocalActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jTextLocalActionPerformed
        // TODO add your handling code here:
}//GEN-LAST:event_jTextLocalActionPerformed

    private void jBCancelarActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jBCancelarActionPerformed
        System.exit(0);
    }//GEN-LAST:event_jBCancelarActionPerformed

    private void jTextNumeroActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jTextNumeroActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_jTextNumeroActionPerformed

    private void jTextHoraActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jTextHoraActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_jTextHoraActionPerformed

    private void jTextMinutoActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jTextMinutoActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_jTextMinutoActionPerformed

    private void jTextVagasActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jTextVagasActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_jTextVagasActionPerformed

    private void jTextClassifAlimentacaoActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jTextClassifAlimentacaoActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_jTextClassifAlimentacaoActionPerformed

    /**
     * Cria um novo objeto derivado de AtividadeTuristica.
     */
    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        java.awt.EventQueue.invokeLater(new Runnable() {

            public void run() {
                new JFrameAtividadeTur().setVisible(true);
            }
        });
    }
    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JPanel AbaAlimentacao;
    private javax.swing.JPanel AbaAventura;
    private javax.swing.JPanel AbaCultural;
    private javax.swing.JPanel AbaPasseio;
    private javax.swing.JTabbedPane AbasAtividadeTuristica;
    private javax.swing.ButtonGroup ButtonGDificuldadeAventura;
    private javax.swing.JButton jBCancelar;
    private javax.swing.JButton jBIncluir;
    private javax.swing.JButton jBLimpar;
    private javax.swing.JLabel jLabelCardapioAlimentacao;
    private javax.swing.JLabel jLabelClassifAlimentacao;
    private javax.swing.JLabel jLabelData;
    private javax.swing.JLabel jLabelDescricao;
    private javax.swing.JLabel jLabelDificuldadeAventura;
    private javax.swing.JLabel jLabelDuracao;
    private javax.swing.JLabel jLabelDuracaoAventura1;
    private javax.swing.JLabel jLabelHorario;
    private javax.swing.JLabel jLabelLocal;
    private javax.swing.JLabel jLabelNome;
    private javax.swing.JLabel jLabelNumero;
    private javax.swing.JLabel jLabelPreco;
    private javax.swing.JLabel jLabelRestricoesAventura;
    private javax.swing.JLabel jLabelRestricoesPasseio;
    private javax.swing.JLabel jLabelVagas;
    private javax.swing.JRadioButton jRBDificilAventura;
    private javax.swing.JRadioButton jRBFacilAventura;
    private javax.swing.JRadioButton jRBImpoAventura;
    private javax.swing.JRadioButton jRBMedioAventura;
    private javax.swing.JRadioButton jRBNormalAventura;
    private javax.swing.JScrollPane jScrollPaneCardapioAlimentacao;
    private javax.swing.JScrollPane jScrollPaneRestricoesAventura;
    private javax.swing.JScrollPane jScrollPaneRestricoesPasseio;
    private javax.swing.JTextField jTextAno;
    private javax.swing.JTextArea jTextAreaRestricoesAventura;
    private javax.swing.JTextArea jTextCardapioAlimentacao;
    private javax.swing.JTextField jTextClassifAlimentacao;
    private javax.swing.JTextField jTextDescricao;
    private javax.swing.JTextField jTextDia;
    private javax.swing.JTextField jTextDuracao;
    private javax.swing.JTextField jTextHora;
    private javax.swing.JTextField jTextLocal;
    private javax.swing.JTextField jTextMes;
    private javax.swing.JTextField jTextMinuto;
    private javax.swing.JTextField jTextNome;
    private javax.swing.JTextField jTextNumero;
    private javax.swing.JTextField jTextPreco;
    private javax.swing.JTextArea jTextRestricoesPasseio;
    private javax.swing.JTextField jTextVagas;
    // End of variables declaration//GEN-END:variables
}
